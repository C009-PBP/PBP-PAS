# # # source: https://github.com/reflekt-io/echo-appcenter/blob/main/.github/workflows/release.yml
# # This is a basic workflow to help you get started with Actions
# name: Release

# # Controls when the workflow will run
# on: 
#   # Triggers the workflow on push events but only for the main branch
#   push:
#     branches: [main]
  
#   # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "Build and Release APK"
#   releases:
#     name: Build and Release APK
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout the code
#         uses: actions/checkout@v3
      
#       - name: Get version from pubspec.yaml
#         id: version
#         run: echo "::set-output name=version::$(grep "version:" pubspec.yaml | cut -c10-)"

#       - name: Setup Java
#         uses: actions/setup-java@v3
#         with:
#           distribution: 'zulu'
#           java-version: '11'

#       - name: Setup Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           channel: 'stable'
      
#       - name: Get packages
#         run: flutter pub get

#       # - name: Analyze
#       #   run: flutter analyze
              
# #       - name: Generate Java keystore
# #         env: 
# #           KEY_JKS: ${{ secrets.KEY_JKS }}
# #         run: echo "$KEY_JKS" | base64 --decode > keystore.jks 
# # #         run: echo "$KEY_JKS" | base64 --decode > upload-keystore.jks 
              
#       - name: Build APK
# #         env:
# #           KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
#         run: flutter build apk --split-per-abi

#       - name: Get current date
#         id: date
#         run: echo "::set-output name=date::$(TZ='Asia/Jakarta' date +'%A %d-%m-%Y %T WIB')"
      
#       - name: Release APK
#         uses: ncipollo/release-action@v1
#         with:
#           allowUpdates: true
#           artifacts: "build/app/outputs/flutter-apk/*.apk"
#           body: "Published at ${{ steps.date.outputs.date }}"
#           name: "v${{ steps.version.outputs.version }}"
#           token: ${{ secrets.TOKEN }}
#           tag: ${{ steps.version.outputs.version }}






# # This is a basic workflow to help you get started with Actions
# # source: https://github.com/reflekt-io/echo-appcenter/blob/main/.github/workflows/release.yml
# name: Release

# # Controls when the workflow will run
# on: 
#   # Triggers the workflow on push events but only for the main branch
#   push:
#     branches: [main]
  
#   # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "Build and Release APK"
#   releases:
#     name: Build and Release APK
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout the code
#         uses: actions/checkout@v3
      
#       - name: Get version from pubspec.yaml
#         id: version
#         run: echo "::set-output name=version::$(grep "version:" pubspec.yaml | cut -c10-)"

#       - name: Setup Java
#         uses: actions/setup-java@v3
#         with:
#           distribution: 'zulu'
#           java-version: '11'

#       - name: Setup Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           channel: 'stable'
      
#       - name: Get packages
#         run: flutter pub get

#       # - name: Analyze
#       #   run: flutter analyze
              
#       # - name: Generate Java keystore
#       #   env: 
#       #     # KEY_JKS: ${{ secrets.KEY_JKS }}
#       #   run: echo "$KEY_JKS" | base64 --decode > upload-keystore.jks 
              
#       - name: Build APK
#         env:
#           KEY_PASSWORD: ${{ secrets.TOKEN }}
#         run: flutter build apk --split-per-abi

#       - name: Get current date
#         id: date
#         run: echo "::set-output name=date::$(TZ='Asia/Jakarta' date +'%A %d-%m-%Y %T WIB')"
      
#       - name: Release APK
#         uses: ncipollo/release-action@v1
#         with:
#           allowUpdates: true
#           artifacts: "build/app/outputs/flutter-apk/*.apk"
#           body: "Published at ${{ steps.date.outputs.date }}"
#           name: "v${{ steps.version.outputs.version }}"
#           # token: ${{ secrets.GH_TOKEN }}
#           tag: ${{ steps.version.outputs.version }}


# name: Flutter CI

# # This workflow is triggered on pushes to the repository.

# on:
#   push:   
#     branches:
#     - [main]


    
# # on: push    # Default will running for every branch.
    
# jobs:
#   build:
#     # This job will run on ubuntu virtual machine
#     runs-on: ubuntu-latest
#     steps:
    
#     # Setup Java environment in order to build the Android app.
#     - uses: actions/checkout@v1
#     - uses: actions/setup-java@v1
#       with:
#         java-version: '12.x'
    
#     # Setup the flutter environment.
#     - uses: subosito/flutter-action@v1
#       with:
#         channel: 'beta' # 'dev', 'alpha', default to: 'stable'
#         # flutter-version: '1.12.x' # you can also specify exact version of flutter
    
#     # Get flutter dependencies.
#     - run: flutter pub get
    
#     # Check for any formatting issues in the code.
#     - run: flutter format --set-exit-if-changed .
    
#     # Statically analyze the Dart code for any errors.
#     - run: flutter analyze .
    
#     # Run widget tests for our flutter project.
#     - run: flutter test
    
#     # Build apk.
#     - run: flutter build apk
    
#     # # Upload generated apk to the artifacts.
#     - uses: actions/upload-artifact@v1
#       with:
#         name: release-apk
#         path: "build/app/outputs/apk/release/app-release.apk"

#       # now relase the just created build
#     # - name: Create a Release APK
#     #   uses: ncipollo/release-action@v1
#     #   with:
#     #     artifacts: build/app/outputs/apk/release/app-release.apk
#     #     token: ${{ secrets.TOKEN }}

  
